name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: alerts_page_test
        type: choice
        options:
          - check_box_test
          - alerts_page_test
          - practice_form_test
          - text_box_test
          - run_all_tests
      browser_type:
        description: Browser type
        required: true
        default:
        type: choice
        options:
          - chrome
          - edge
          - firefox
  push:
    branches:
      - fix-all-tests

  schedule:
    - cron: 30 3 * * 6   # Runs at 03:30 UTC every Saturday
    - cron: 00 10 * * *   # Runs at 10:00 UTC everyday

permissions:
  contents: read
  pages: write
  id-token: write


jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: >
          ARTIFACT_ID=$(curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/Evgeniy955/demoqa_com/actions/artifacts?name=allure-results" 
          | python3 -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
          &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/Evgeniy955/demoqa_com/actions/artifacts/$ARTIFACT_ID/zip 
          -o artifacts.zip
#          &&
#          REPORT_ID=$(curl -L
#          -H "Accept: application/vnd.github+json"
#          -H "X-GitHub-Api-Version: 2022-11-28"
#          "https://api.github.com/repos/Evgeniy955/demoqa_com/actions/artifacts?name=github-pages"
#          | python3 -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
#          &&
#          curl -L
#          -H "Accept: application/vnd.github+json"
#          -H "Authorization: Bearer ${{ secrets.TOKEN }}"
#          -H "X-GitHub-Api-Version: 2022-11-28"
#          https://api.github.com/repos/Evgeniy955/demoqa_com/actions/artifacts/$REPORT_ID/zip
#          -o pages.zip
#      - run: mkdir allure-results && unzip artifacts.zip -d allure-results
#      - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
#      - run: cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
      - name: Store allure history
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 1
        continue-on-error: true

  test:
    runs-on: ubuntu-latest
    needs: download-history

    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        BROWSER: [ chrome, edge, firefox ]

    env:
      PROJECT_NAME: demoqa_com
      CREATE_ALLURE_REPORT: true
      SEND_REPORT: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Validate browser type
        run: |
          if [[ "${{ github.event.inputs.browser_type }}" == '' ]]; then
          echo "All browsers have been selected"
          elif [[ "${{ matrix.BROWSER }}" != "${{ github.event.inputs.browser_type }}" ]]; then
          echo "Invalid browser type selected: ${{ github.event.inputs.browser_type }} for ${{ matrix.BROWSER }}"
          exit 1
          fi

      - name: Install browser
        run: |
          if [[ "${{ matrix.BROWSER }}" == "chrome" ]]; then
            sudo apt-get install -y google-chrome-stable
          elif [[ "${{ matrix.BROWSER }}" == "edge" ]]; then
            sudo apt update && sudo apt install -y microsoft-edge-stable
          elif [[ "${{ matrix.BROWSER }}" == "firefox" ]]; then
            sudo apt update
            sudo apt install -y firefox || true
            sudo rm /snap/bin/geckodriver
            wget https://github.com/mozilla/geckodriver/releases/latest/download/geckodriver-linux64.tar.gz
            tar -xvzf geckodriver-linux64.tar.gz
            sudo mv geckodriver /usr/local/bin/
            which geckodriver
          fi

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: check box test
        if: "github.event.inputs.deployment_target == 'check_box_test'"
        env:
          REMOTE_OPTIONS: "--headless --no-sandbox --disable-dev-shm-usage"
          BROWSER: ${{ github.event.inputs.browser_type }}
        run: |
          TEST_NAME="check_box_test"
          REPORT="report/${TEST_NAME}/ctrf-report.json"
          pytest -m "check_box_test" --ctrf $REPORT
          npx github-actions-ctrf $REPORT
        continue-on-error: true

      - name: alerts page test
        if: matrix.BROWSER == github.event.inputs.browser_type && github.event.inputs.deployment_target == 'alerts_page_test'
        env:
          REMOTE_OPTIONS: "--headless --no-sandbox --disable-dev-shm-usage"
          BROWSER: ${{ github.event.inputs.browser_type }}
        run: |
          TEST_NAME="alerts_page_test"
          REPORT="report/${TEST_NAME}/ctrf-report.json"
          pytest -m "alerts_page_test" --ctrf $REPORT
          npx github-actions-ctrf $REPORT
          echo ${{ matrix.BROWSER }}
        continue-on-error: true

      - name: practice form test
        if: "github.event.inputs.deployment_target == 'practice_form_test'"
        env:
          REMOTE_OPTIONS: "--headless --no-sandbox --disable-dev-shm-usage"
          BROWSER: ${{ github.event.inputs.browser_type }}
        run: |
          TEST_NAME="practice_form_test"
          REPORT="report/${TEST_NAME}/ctrf-report.json"
          pytest -m "practice_form_test" --ctrf $REPORT
          npx github-actions-ctrf $REPORT || true
        continue-on-error: true

      - name: text box test
        if: "github.event.inputs.deployment_target == 'text_box_test'"
        env:
          REMOTE_OPTIONS: "--headless --no-sandbox --disable-dev-shm-usage"
          BROWSER: ${{ github.event.inputs.browser_type }}
        run: |
          TEST_NAME="text_box_test"
          REPORT="report/${TEST_NAME}/ctrf-report.json"
          pytest -m "text_box_test" --ctrf $REPORT
          npx github-actions-ctrf $REPORT
        continue-on-error: true

      - name: run all tests
        if: "github.event.inputs.deployment_target == 'run_all_tests'"
        env:
          REMOTE_OPTIONS: "--headless --no-sandbox --disable-dev-shm-usage"
          BROWSER: ${{ github.event.inputs.browser_type }}
        run: |
          TEST_NAME="run_all_tests"
          REPORT="report/${TEST_NAME}/ctrf-report.json"
          pytest --ctrf $REPORT || true --reruns 1
          npx github-actions-ctrf $REPORT
        continue-on-error: true

      - name: cross browser test
        if: "github.event.inputs.deployment_target == ''"
        env:
          REMOTE_OPTIONS: "--headless --no-sandbox --disable-dev-shm-usage"
          BROWSER: ${{ matrix.BROWSER }}
        run: |
          TEST_NAME="cross_browser_test"
          REPORT="report/${TEST_NAME}/ctrf-report.json"
          pytest --ctrf $REPORT || true --reruns 1
          npx github-actions-ctrf $REPORT
        continue-on-error: true

      - name: Check Allure Results Directory
        run: ls -la allure-results
        continue-on-error: true

      - name: Store allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results/${{ github.event.inputs.browser_type }}
          retention-days: 1
        continue-on-error: true


  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    if: always()

    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - run: allure generate -c allure-results -o _site
      - name: Store generated report
        uses: actions/upload-artifact@v3
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    if: always()

    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9
